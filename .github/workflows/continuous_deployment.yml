name: Continuous Deployment 

on:
  push:
    branches: [ add-cd-workflow ]
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DOCKER_GITHUB_USERNAME: ${{ github.actor }}
  VM_HOST: ${{ secrets.VM_HOST }}
  VM_USERNAME: ${{ secrets.AZURE_USERNAME }}
  VM_KEY: ${{ secrets.AZURE_KEY }}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Copy docker-compose file to server
        run: |
            echo "copying the docker-compose-prod file from runner to server..."
            scp -o StrictHostKeyChecking=no docker-compose.prod.yml ${{ env.VM_USERNAME }}@${{ env.VM_HOST }}:~/whoknows2

      - name: Login to server via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ env.VM_USERNAME }}
          key: ${{ env.VM_KEY }}
          port: 22

      - name: Login to GitHub Container Registry on the server 
        run: docker login ghcr.io -u ${{ env.DOCKER_GITHUB_USERNAME }} -p ${{ env.GITHUB_TOKEN }}

      - name: Create .env file
        run: |
          cd ~/whoknows2
          echo "API_KEY=$API_KEY" >> .env

      - name: Pull and Run the docker compose file
        run: |
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up