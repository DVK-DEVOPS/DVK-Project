definitions:
  db.Result:
    properties:
      content:
        type: string
      createdAt:
        type: string
      language:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      url:
        type: string
    type: object
  handlers.RequestValidationError:
    properties:
      detail:
        description: can be string or null
      message:
        type: string
      statusCode:
        type: integer
    type: object
  models.AuthResponse:
    properties:
      message:
        type: string
      statusCode:
        type: integer
    type: object
  models.HTTPValidationError:
    properties:
      detail:
        items:
          $ref: '#/definitions/models.ValidationErrorDetail'
        type: array
    type: object
  models.ValidationErrorDetail:
    properties:
      loc:
        items: {}
        type: array
      msg:
        type: string
      type:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Authenticates a user using email and password
      parameters:
      - description: User email
        in: formData
        name: email
        required: true
        type: string
      - description: User password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Successful registration
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "422":
          description: Validation error
          schema:
            $ref: '#/definitions/models.HTTPValidationError'
      summary: Login
      tags:
      - auth
  /api/register:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Create new user with the parameters user fills in the registration
        form.
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful registration
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "422":
          description: Validation error
          schema:
            $ref: '#/definitions/models.HTTPValidationError'
      summary: Register new user
      tags:
      - users
  /api/search:
    get:
      consumes:
      - application/json
      description: Search pages by query string (q) and optional language code
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      - description: Language code (optional)
        in: query
        name: language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Result'
        "422":
          description: Validation Error - missing/invalid parameters
          schema:
            $ref: '#/definitions/handlers.RequestValidationError'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search pages
      tags:
      - search
swagger: "2.0"
